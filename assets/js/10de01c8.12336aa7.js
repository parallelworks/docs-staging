"use strict";(self.webpackChunkpworks_docs=self.webpackChunkpworks_docs||[]).push([[2125],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),u=a,k=m["".concat(d,".").concat(u)]||m[u]||s[u]||o;return n?r.createElement(k,i(i({ref:t},p),{},{components:n})):r.createElement(k,i({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2196:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={},d="Docker",c={unversionedId:"developers-guide/containers/docker",id:"developers-guide/containers/docker",title:"Docker",description:"Docker",source:"@site/docs/developers-guide/containers/01_docker.md",sourceDirName:"developers-guide/containers",slug:"/developers-guide/containers/docker",permalink:"/developers-guide/containers/docker",editUrl:"https://github.com/parallelworks/docs/tree/master/docs/developers-guide/containers/01_docker.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Containers",permalink:"/developers-guide/containers/"},next:{title:"Singularity",permalink:"/developers-guide/containers/singularity"}},p=[{value:"Docker",id:"docker-1",children:[{value:"What is Docker?",id:"what-is-docker",children:[],level:3},{value:"Running an application via Docker",id:"running-an-application-via-docker",children:[],level:3},{value:"Building a Docker image",id:"building-a-docker-image",children:[{value:"Starting a docker from a container",id:"starting-a-docker-from-a-container",children:[],level:4},{value:"Building the docker from a Dockerfile",id:"building-the-docker-from-a-dockerfile",children:[],level:4},{value:"Sharing/publishing your docker image",id:"sharingpublishing-your-docker-image",children:[],level:4}],level:3}],level:2},{value:"Footnotes",id:"footnotes",children:[],level:2}],s={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docker"},"Docker"),(0,o.kt)("h2",{id:"docker-1"},"Docker"),(0,o.kt)("p",null,"This section provides a very quick introduction for using dockers. For a more thorough documentation on Docker refer to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.docker.com/get-started/"},"https://docs.docker.com/get-started/")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.docker.com"},"https://docs.docker.com/"))),(0,o.kt)("h3",{id:"what-is-docker"},"What is Docker?"),(0,o.kt)("p",null,"A Docker container is a stand-alone package of a piece of software that includes everything needed for running an application. Using Docker enables running your application on any environment and ensures that your code runs the same regardless of the environment."),(0,o.kt)("h3",{id:"running-an-application-via-docker"},"Running an application via Docker"),(0,o.kt)("p",null,"To run a command in a docker container, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker run")," command. For example, to execute the ",(0,o.kt)("inlineCode",{parentName:"p"},"python3")," program ",(0,o.kt)("inlineCode",{parentName:"p"},"hello.py")," in the docker container ",(0,o.kt)("inlineCode",{parentName:"p"},"parallelworks/python-tools:v3.6-pandas"),", instead of running the command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"python3 hello.py\n")),(0,o.kt)("p",null,"directly via the command line, you would run the above command in a docker container based on the docker image ",(0,o.kt)("inlineCode",{parentName:"p"},"parallelworks/python-tools:v3.6-pandas"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker run --rm  -i -v `pwd`:`pwd` -w `pwd` parallelworks/python-tools:v3.6-pandas python3 hello.py\n")),(0,o.kt)("p",null,"The options used above for running the command ",(0,o.kt)("inlineCode",{parentName:"p"},"docker run")," are :"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"--rm")," : automatically removes the container after exiting from the docker container (does not remove the files generated under the mapped volume with option ",(0,o.kt)("inlineCode",{parentName:"li"},"-v"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-i")," : for running interactively"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-v `pwd`:`pwd`")," : mounts",(0,o.kt)("a",{parentName:"li",href:"/developers-guide/containers/docker#footnotes"},"*")," the current directory inside the docker container when the docker starts"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"-w `pwd`")," : sets the working directory inside the container to the current directory")),(0,o.kt)("p",null,"For development and testing, you can also run commands interactively (e.g., ",(0,o.kt)("inlineCode",{parentName:"p"},"bash")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"python"),") via a docker container and run several commands from within that container. For example to start a bash shell inside a docker container based on the image ",(0,o.kt)("inlineCode",{parentName:"p"},"parallelworks/python-tools:v3.6-pandas")," run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker run --rm -t  -i -v `pwd`:`pwd` -w `pwd` parallelworks/python-tools:v3.6-pandas python\n")),(0,o.kt)("p",null,"Running this command will open the interactive python session inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"python-tools")," docker container:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Python 3.6.4 (default, Feb 17 2018, 09:32:33)\n[GCC 4.9.2] on linux\nType "help", "copyright", "credits" or "license" for more information.\n>>>\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Note")," that the option ",(0,o.kt)("inlineCode",{parentName:"p"},"-t")," is required to run commands interactively in a docker container. To exit from the container, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"exit\n")),(0,o.kt)("h3",{id:"building-a-docker-image"},"Building a Docker image"),(0,o.kt)("p",null,"There are multiple ways of making a new docker image (detailed steps for each approach are below):"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Start by running a docker container (with ",(0,o.kt)("inlineCode",{parentName:"li"},"docker run"),") based on an existing image with bash (e.g., from ",(0,o.kt)("inlineCode",{parentName:"li"},"python:3.6"),"). Install software and make necessary changes inside the container, and then exit from the docker and commit the docker as a new image."),(0,o.kt)("li",{parentName:"ol"},"Build a docker from a Dockerfile. In this method, the commands for installing software and making changes are put in a Dockerfile. The docker image is then built via the ",(0,o.kt)("inlineCode",{parentName:"li"},"docker build")," command (see Getting started from Docker Documentation: ",(0,o.kt)("a",{parentName:"li",href:"https://docs.docker.com/get-started/part2/#dockerfile"},"https://docs.docker.com/get-started/part2/#dockerfile"),").")),(0,o.kt)("p",null,"In general, the first method is preferable for debugging and testing, but this method is not easy to replicate because the steps for making a docker image are not easily retrievable. Also, later on, it would be difficult to find out the installed software and configuration of docker images that are built this way. So, you could start building a docker via the first method and after installing, configuring and testing your software, you can create a new Dockerfile and add the required steps to it (the bash command ",(0,o.kt)("inlineCode",{parentName:"p"},"history")," provides an easy method for retrieving the commands that were executed for installing software in the docker container)."),(0,o.kt)("h4",{id:"starting-a-docker-from-a-container"},"Starting a docker from a container"),(0,o.kt)("p",null,"Here are the steps for building"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"First, change to the directory that contains the necessary files for installing your software (e.g. software binary files).")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Then start a container based on an existing image, e.g., ",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/_/python/"},"python:3.6")," :"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"~/user/dockers/python-pandas $ docker run -it -v `pwd`:`pwd` -w `pwd` python:3.6 /bin/bash\n")),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Note")," that you should not use the option ",(0,o.kt)("inlineCode",{parentName:"p"},"--rm")," to be able to save the container as an image at the end.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Install and setup your software, from the interactive bash command inside the docker container. For example, to install Pandas, run"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"root@98a7c60197d3:/home/user/dockers/python-pandas#  pip install pandas\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"To exit from the container run the command ",(0,o.kt)("inlineCode",{parentName:"p"},"exit"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"root@98a7c60197d3:/home/user/dockers/python-pandas#  exit\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Now, you can make and image from your container:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"First, find the container id by running"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"docker ps -a\n")),(0,o.kt)("p",{parentName:"li"},"to show all the containers. For example:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},'CONTAINER ID  IMAGE       COMMAND      CREATED             STATUS                     PORTS  NAMES\n98a7c60197d3  python:3.6  "/bin/bash"  About a minute ago  Exited (0) 15 seconds ago         affectionate_brattain\n'))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Use the container ID, to make a new image from your container:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"docker commit 98a7c60197d3 python3-pandas\n")))))),(0,o.kt)("h4",{id:"building-the-docker-from-a-dockerfile"},"Building the docker from a Dockerfile"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Building the docker using a Dockerfile requires downloading the necessary files for installation (if any) and the Dockerfile in a directory.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"This is an example of a Dockerfile based on a python3 docker container with Pandas and matplotlib:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},'# Use python:3.6 as a base image\nFROM python:3.6\n\n# Install pandas and xlrd\n\nRUN pip install pandas  && \\\n    pip install matplotlib  && \\\n    pip install xlrd\n\nRUN useradd -ms /bin/bash  pyuser\n\nCMD ["python3"]\n')),(0,o.kt)("p",{parentName:"li"},"More examples of Dockerfiles can be found in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/parallelworks/Dockerfiles"},"https://github.com/parallelworks/Dockerfiles"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Build the docker image via the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker build")," command (from inside the folder that contains the Dockerfile):"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"docker build -t python-pandas .\n")))),(0,o.kt)("h4",{id:"sharingpublishing-your-docker-image"},"Sharing/publishing your docker image"),(0,o.kt)("p",null,"To share your image on docker hub, follow the directions in ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/get-started/part2/#share-your-image"},"https://docs.docker.com/get-started/part2/#share-your-image")),(0,o.kt)("h2",{id:"footnotes"},"Footnotes"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Mounting a directory means making that particular directory accessible at a certain location inside the docker container. Only the mounted directories (and their sub-directories) are accessible via the docker container.")))}m.isMDXComponent=!0}}]);